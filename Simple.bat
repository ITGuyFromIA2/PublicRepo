powershell -executionpolicy bypass -Command  "& {$List_AppXToRemove = @("*DellDigital*","*DellOptimizer*"); $AllAppX_Provisioned = Get-AppxProvisionedPackage -Online; $Matched_Provisioned = @(); foreach ($Provisioned in $AllAppX_Provisioned) {if (($List_AppXToRemove | %{$Provisioned.PackageName -like $_}) -contains $true) {$Matched_Provisioned += $Provisioned; Remove-AppxProvisionedPackage -Online -PackageName $Provisioned.PackageName -AllUsers -ErrorAction SilentlyContinue;}} $appX_Remove = @(); $Matched_Installed = @(); $AllAppX_Installed = Get-AppxPackage -AllUsers; foreach ($Installed in $AllAppX_Installed) {if (($List_AppXToRemove | %{$installed.PackageFullName -like $_}) -contains $true) {$Matched_Installed += $Installed; Remove-AppxPackage -Package $Installed -AllUsers -ErrorAction SilentlyContinue;}} $ProgramList = @( "HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*", "HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\*" );
$Programs = Get-ItemProperty $ProgramList -EA 0; $UninstallAppList = @("Dell*Optimizer*","*Dell Digital Delivery*","*Express*Connect*"); $RunningProcessList = @("DellOptimizer.exe","Dell.D3.UWP.exe"); $App = @(); $App_Whole = @(); $ManualApp = @() ;  foreach ($Program in $Programs) {if ((($UninstallAppList | %{($Program.DisplayName -like $_)}) -contains $true)) {if (($Program.UninstallString -like "*msiexec*")) {$App_Whole += $Program; $App += $Program.PSChildName;} else {$ManualApp += $Program;}}} Get-Process | Where-Object { $_.ProcessName -in $RunningProcessList } | Stop-Process -Force; cmd /c  "$(($ManualApp).uninstallString) /silent"; foreach ($a in $App) {$Params = @("/qn","/norestart","/X","$a"); Start-Process "msiexec.exe" -ArgumentList $Params -Wait -NoNewWindow;}}"